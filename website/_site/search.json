[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "data-cleaning/data-merging.html",
    "href": "data-cleaning/data-merging.html",
    "title": "Data Merging",
    "section": "",
    "text": "Code\nimport pandas as pd\n\n# Load the CSV files\nfactors = pd.read_csv(\"../data/factors.csv\")\npolicy = pd.read_csv(\"../data/policy.csv\")\nviolence = pd.read_csv(\"../data/violence.csv\")\n\n# Perform an outer merge on 'State'\nmerged_data = factors.merge(policy, on=\"State\", how=\"outer\").merge(violence, on=\"State\", how=\"outer\")\n\n# Save the merged file\nmerged_data.to_csv(\"../data/merged_data.csv\", index=False)\n\nprint(\"Data merged and saved successfully!\")\n\n\nData merged and saved successfully!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "website",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index1.html",
    "href": "index1.html",
    "title": "guns",
    "section": "",
    "text": "The bar char and map below visualize the distribution of the firearm morality rate across the country.\n\n\nCode\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load data\ngun_deaths = pd.read_csv(\"data/merged_data.csv\")\n\n# Define bins and labels\nbins = [0, 10, 15, 20, 25, float('inf')]\nlabels = [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]  # Fixed the syntax error\n\n# Assign bins, ensuring no overlap (excluding the right endpoint)\ngun_deaths['mortality_bin'] = pd.cut(\n    gun_deaths['firearm_mortality_by_state_2022'], bins=bins, labels=labels, right=False\n)\n\n# Count states in each bin\ngun_death_distribution = gun_deaths['mortality_bin'].value_counts().sort_index().reset_index()\ngun_death_distribution.columns = ['mortality_bin', 'State_Count']\n\n# Define colors\ncolors = {\n    \"Very Low\": \"#68bb59\",\n    \"Low\": \"#acdf87\",\n    \"Moderate\": \"#fab733\",\n    \"High\": \"#ff6242\",\n    \"Very High\": \"#c61a09\"\n}\n\n# Plot\ntitle = \"Firearm Mortality by State (2022)\"\nsubtitle = \"Number of states in each mortality range\"\nplt.figure(figsize=(7, 4))  # Slightly increased width for better spacing\nax = sns.barplot(\n    y='mortality_bin', x='State_Count', data=gun_death_distribution,\n    order=labels, palette=colors, edgecolor='black', linewidth=1.5  # Increased border width\n)\n\n# Add labels right outside the bars with better spacing\nfor index, value in enumerate(gun_death_distribution['State_Count']):\n    ax.text(value + 0.8, index, str(value), va='center', ha='left', fontsize=12, color='black')\n\nplt.title(f\"{title}\\n{subtitle}\", fontsize=12, weight='normal')  # Unbolded title, smaller font\nplt.xlabel(\"\")\nplt.ylabel(\"\")\nplt.xticks([])\nplt.grid(axis='x', linestyle=\"--\", alpha=0.5)\nplt.xlim(0, gun_death_distribution['State_Count'].max() + 5)  # Added padding to the x-axis\nplt.show()\n\n\n\n\n\n\n\n\n\nThis plot indicates that there are many more restrictive states than protective states, with a total of 27 states having restrictive policies compared to 18 states with protective policies. This imbalance is particularly evident in the ‘most restrictive’ category, which alone accounts for 16 states.\n\n\nCode\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\nfrom matplotlib.colors import LinearSegmentedColormap\n\n# Load dataset\ngun_deaths = pd.read_csv(\"data/merged_data.csv\")\n\n# Ensure state names are lowercase for merging\ngun_deaths[\"State\"] = gun_deaths[\"State\"].str.lower()\n\n# Define mortality bins and labels\nmortality_bins = [0, 10, 15, 20, 25, float(\"inf\")]\nmortality_labels = [1, 2, 3, 4, 5]\n\n# Assign states into mortality categories\ngun_deaths[\"mortality_score\"] = pd.cut(\n    gun_deaths[\"firearm_mortality_by_state_2022\"], \n    bins=mortality_bins, \n    labels=mortality_labels,\n    right=False\n).astype(float)\n\n# Load U.S. state shapefile from Census Bureau\nstates_url = \"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_20m.zip\"\nstates_map = gpd.read_file(states_url)\n\n# Ensure lowercase for merging\nstates_map[\"region\"] = states_map[\"NAME\"].str.lower()\n\n# Merge state map with gun deaths data\nmap_data = states_map.merge(gun_deaths, left_on=\"region\", right_on=\"State\", how=\"left\")\n\n# Define color map\ncolors = [\"#68bb59\", \"#acdf87\", \"#fab733\", \"#ff6242\", \"#c61a09\"]\ncmap = LinearSegmentedColormap.from_list(\"custom_cmap\", colors)\n\n# Plot Gun Deaths by State\nfig, ax = plt.subplots(figsize=(16, 10))\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes(\"right\", size=\"3%\", pad=0.2)\n\n# Plot states\nmap_data.plot(column=\"mortality_score\", cmap=cmap, linewidth=0.3, edgecolor=\"black\", ax=ax, legend=True, cax=cax)\n\n# Customize plot\nax.set_title(\"Firearm Mortality by State (2022)\", fontsize=18)\nax.set_xticks([])\nax.set_yticks([])\nax.set_frame_on(False)\n\nplt.show()"
  },
  {
    "objectID": "index1.html#problem-objectives",
    "href": "index1.html#problem-objectives",
    "title": "guns",
    "section": "",
    "text": "The bar char and map below visualize the distribution of the firearm morality rate across the country.\n\n\nCode\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load data\ngun_deaths = pd.read_csv(\"data/merged_data.csv\")\n\n# Define bins and labels\nbins = [0, 10, 15, 20, 25, float('inf')]\nlabels = [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]  # Fixed the syntax error\n\n# Assign bins, ensuring no overlap (excluding the right endpoint)\ngun_deaths['mortality_bin'] = pd.cut(\n    gun_deaths['firearm_mortality_by_state_2022'], bins=bins, labels=labels, right=False\n)\n\n# Count states in each bin\ngun_death_distribution = gun_deaths['mortality_bin'].value_counts().sort_index().reset_index()\ngun_death_distribution.columns = ['mortality_bin', 'State_Count']\n\n# Define colors\ncolors = {\n    \"Very Low\": \"#68bb59\",\n    \"Low\": \"#acdf87\",\n    \"Moderate\": \"#fab733\",\n    \"High\": \"#ff6242\",\n    \"Very High\": \"#c61a09\"\n}\n\n# Plot\ntitle = \"Firearm Mortality by State (2022)\"\nsubtitle = \"Number of states in each mortality range\"\nplt.figure(figsize=(7, 4))  # Slightly increased width for better spacing\nax = sns.barplot(\n    y='mortality_bin', x='State_Count', data=gun_death_distribution,\n    order=labels, palette=colors, edgecolor='black', linewidth=1.5  # Increased border width\n)\n\n# Add labels right outside the bars with better spacing\nfor index, value in enumerate(gun_death_distribution['State_Count']):\n    ax.text(value + 0.8, index, str(value), va='center', ha='left', fontsize=12, color='black')\n\nplt.title(f\"{title}\\n{subtitle}\", fontsize=12, weight='normal')  # Unbolded title, smaller font\nplt.xlabel(\"\")\nplt.ylabel(\"\")\nplt.xticks([])\nplt.grid(axis='x', linestyle=\"--\", alpha=0.5)\nplt.xlim(0, gun_death_distribution['State_Count'].max() + 5)  # Added padding to the x-axis\nplt.show()\n\n\n\n\n\n\n\n\n\nThis plot indicates that there are many more restrictive states than protective states, with a total of 27 states having restrictive policies compared to 18 states with protective policies. This imbalance is particularly evident in the ‘most restrictive’ category, which alone accounts for 16 states.\n\n\nCode\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\nfrom matplotlib.colors import LinearSegmentedColormap\n\n# Load dataset\ngun_deaths = pd.read_csv(\"data/merged_data.csv\")\n\n# Ensure state names are lowercase for merging\ngun_deaths[\"State\"] = gun_deaths[\"State\"].str.lower()\n\n# Define mortality bins and labels\nmortality_bins = [0, 10, 15, 20, 25, float(\"inf\")]\nmortality_labels = [1, 2, 3, 4, 5]\n\n# Assign states into mortality categories\ngun_deaths[\"mortality_score\"] = pd.cut(\n    gun_deaths[\"firearm_mortality_by_state_2022\"], \n    bins=mortality_bins, \n    labels=mortality_labels,\n    right=False\n).astype(float)\n\n# Load U.S. state shapefile from Census Bureau\nstates_url = \"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_20m.zip\"\nstates_map = gpd.read_file(states_url)\n\n# Ensure lowercase for merging\nstates_map[\"region\"] = states_map[\"NAME\"].str.lower()\n\n# Merge state map with gun deaths data\nmap_data = states_map.merge(gun_deaths, left_on=\"region\", right_on=\"State\", how=\"left\")\n\n# Define color map\ncolors = [\"#68bb59\", \"#acdf87\", \"#fab733\", \"#ff6242\", \"#c61a09\"]\ncmap = LinearSegmentedColormap.from_list(\"custom_cmap\", colors)\n\n# Plot Gun Deaths by State\nfig, ax = plt.subplots(figsize=(16, 10))\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes(\"right\", size=\"3%\", pad=0.2)\n\n# Plot states\nmap_data.plot(column=\"mortality_score\", cmap=cmap, linewidth=0.3, edgecolor=\"black\", ax=ax, legend=True, cax=cax)\n\n# Customize plot\nax.set_title(\"Firearm Mortality by State (2022)\", fontsize=18)\nax.set_xticks([])\nax.set_yticks([])\nax.set_frame_on(False)\n\nplt.show()"
  },
  {
    "objectID": "eda/eda.html",
    "href": "eda/eda.html",
    "title": "Untitled",
    "section": "",
    "text": "import pandas as pd\n\n# Load the merged data\nmerged_data = pd.read_csv(\"../data/merged_data.csv\")\n\n\n# Display column names\nprint(merged_data.columns)\n\nIndex(['State', 'drug_overdose_mortality_rate', 'total_abortion_ban',\n       'abortion_protectiveness', 'access_to_mental_health_care_ranking',\n       'state_ranking_in_mental_health_in_youth',\n       'state_ranking_in_mental_health_in_adults',\n       'domestic_violence_shelters', 'dv_people_to_shelter', 'population',\n       'dv_spending_per_person', 'domestic_violence_spending_by_state',\n       'unemployment_rate', 'labor_participation_women_percentage',\n       'prohibition_for_stalkers', 'abusers_turn_in_gun_after_conviction',\n       'prohibition_for_domestic_abusers',\n       'prohibition_for_convicted_domestic_abusers', 'waiting_period',\n       'mental_health_in_background_check',\n       'funding_for_violence_intervention',\n       'no_purchase_after_violent_offense', 'age_requirement',\n       'mentaI_illness_prohibitor', 'hate_crime_prohibitor',\n       'gun_removal_program', 'fugitive_from_justice_prohibitor',\n       'felony prohibitor', 'restraining_order_prohibitor', 'no_open_carry',\n       'no_guns_in_k_through_twelve_schools', 'no_guns_at_demonstrations',\n       'no_guns_on_college_campuses',\n       'bar_concealed_carry_by_people_with_violent_misdemeanors',\n       'high_capacity_magazines_prohibited', 'dealer_lisence_required',\n       'asault_weapons_prohibited', 'secure_storage_child_access_laws',\n       'rejected_shoot_first_laws', 'red_flag_laws',\n       'background_check_or_purchase_permit',\n       'concealed_carry_permit_required', 'extreme_risk_law',\n       'missing_person_by_state', 'gun_ownership_rates_per_state',\n       'suicide_by_firearms', 'firearm_mortality_by_state_2022',\n       'school_shootings_by_state_2024',\n       'firearm_mortality_rate_children_one_to_nine_years_old'],\n      dtype='object')\n\n\n\ntop_10_firearm_mortality = merged_data[['State', 'firearm_mortality_by_state_2022']]\\\n    .sort_values(by='firearm_mortality_by_state_2022', ascending=False)\\\n    .head(10)\n\n# Display the result\nprint(top_10_firearm_mortality)\n\n                   State  firearm_mortality_by_state_2022\n24           Mississippi                             29.6\n18             Louisiana                             28.2\n31            New Mexico                             27.3\n0                Alabama                             25.5\n25              Missouri                             24.2\n26               Montana                             23.9\n1                 Alaska                             22.4\n3               Arkansas                             21.9\n8   District of Columbia                             21.4\n40        South Carolina                             20.8\n\n\n\n# Define bins and labels\nbins = [0, 10, 15, 20, 25, float('inf')]\nlabels = [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n\n# Assign categories based on firearm mortality rate\nmerged_data['mortality_category'] = pd.cut(merged_data['firearm_mortality_by_state_2022'], bins=bins, labels=labels)\n\n# View distribution\nprint(merged_data['mortality_category'].value_counts())\n\nmortality_category\nLow          16\nModerate     14\nHigh          9\nVery Low      8\nVery High     4\nName: count, dtype: int64\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load data\nmerged_data = pd.read_csv(\"../data/merged_data.csv\")\n\n# Define bins and labels for firearm mortality\nbins = [0, 10, 15, 20, 25, merged_data['firearm_mortality_by_state_2022'].max()]\nlabels = [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n\n# Categorize firearm mortality rates\nmerged_data['mortality_category'] = pd.cut(\n    merged_data['firearm_mortality_by_state_2022'], bins=bins, labels=labels\n)\n\n# Define custom color palette\npalette = {\n    \"Very Low\": \"#1c7416\", \n    \"Low\": \"#68bb59\", \n    \"Moderate\": \"#fab733\", \n    \"High\": \"#ff0000\", \n    \"Very High\": \"#c61a09\"\n}\n\n# Create box plot\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='drug_overdose_mortality_rate', \n    palette=palette\n)\n\n# Format plot to match the reference image\nplt.title(\"Drug Overdose Mortality Rate by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Drug Overdose Mortality Rate (per 100,000)\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/1811605847.py:28: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load data\nmerged_data = pd.read_csv(\"../data/merged_data.csv\")\n\n# Define bins and labels for firearm mortality\nbins = [0, 10, 15, 20, 25, merged_data['firearm_mortality_by_state_2022'].max()]\nlabels = [\"Very Low\", \"Low\", \"Moderate\", \"High\", \"Very High\"]\n\n# Categorize firearm mortality rates\nmerged_data['mortality_category'] = pd.cut(\n    merged_data['firearm_mortality_by_state_2022'], bins=bins, labels=labels\n)\n\n# Ensure correct order of categories\nmerged_data['mortality_category'] = pd.Categorical(\n    merged_data['mortality_category'], categories=labels, ordered=True\n)\n\n# Define custom color palette\npalette = {\n    \"Very Low\": \"#1c7416\", \n    \"Low\": \"#68bb59\", \n    \"Moderate\": \"#fab733\", \n    \"High\": \"#ff0000\", \n    \"Very High\": \"#c61a09\"\n}\n\n# Create box plot\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='access_to_mental_health_care_ranking', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Access to Mental Health Care Ranking by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Access to Mental Health Care Ranking (Lower is Better)\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/1679096282.py:33: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='state_ranking_in_mental_health_in_adults', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"State Ranking in Mental Health in Adults by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"State Ranking in Mental Health (Lower is Better)\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/2925012457.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='domestic_violence_shelters', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Number of Domestic Violence Shelters by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Number of Domestic Violence Shelters\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/565574178.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='unemployment_rate', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Unemployment Rate by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Unemployment Rate (%)\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/666588960.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='labor_participation_women_percentage', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Labor Participation of Women by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Labor Participation of Women (%)\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/4226980556.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='missing_person_by_state', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Number of Missing Persons by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Number of Missing Persons\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/2250685414.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='gun_ownership_rates_per_state', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Gun Ownership Rates by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Gun Ownership Rate (%)\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/4035193299.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='suicide_by_firearms', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Suicides by Firearms by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Number of Suicides by Firearms\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/2903196679.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='firearm_mortality_rate_children_one_to_nine_years_old', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Firearm Mortality Rate (Ages 1-9) by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"Firearm Mortality Rate (Ages 1-9) per 100,000\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/422796669.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='dv_people_to_shelter', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Domestic Violence Survivors per Shelter by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"DV Survivors per Shelter\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/176810535.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=merged_data, \n    x='mortality_category', \n    y='dv_spending_per_person', \n    palette=palette,\n    width=0.6\n)\n\n# Format plot\nplt.title(\"Domestic Violence Spending per Person by Firearm Mortality Category\", fontsize=14)\nplt.xlabel(\"Firearm Mortality Category\", fontsize=12)\nplt.ylabel(\"DV Spending per Person (USD)\", fontsize=12)\nplt.xticks(rotation=45, fontsize=10)\nplt.yticks(fontsize=10)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show plot\nplt.show()\n\n/var/folders/gf/ppk7yck96gx15bzg93b7fysm0000gn/T/ipykernel_3183/1832011546.py:2: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\n\n\n\n\n\n\n\n\n\n\nBinary Vals"
  }
]